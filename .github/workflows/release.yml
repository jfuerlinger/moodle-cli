name: Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: paulhatch/semantic-version@v4.0.2
      id: sem_version
      with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
        major_regexp_flags: ""
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
        minor_regexp_flags: ""
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}-prerelease${increment}"
        # Optional path to check for changes. If any changes are detected in the path the
        # 'changed' output will true. Enter multiple paths separated by spaces.
        change_path: "MoodleCli.ConsoleApp MoodleCli.Core"
        # Named version, will be used as suffix for name version tag
        namespace: moodle-cli
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: false
        # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
        search_commit_body: false
        # The output method used to generate list of users, 'csv' or 'json'.
        user_format_type: "csv"


    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0'
        dotnet-quality: 'preview'
    
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --verbosity normal
      
    - name: Publish
      run: |
        mkdir ../releases/
        mkdir ../publish/
        dotnet publish -c Release -o ../publish/linux-x64 -r linux-x64  --self-contained true
        dotnet publish -c Release -o ../publish/win-x64 -r win-x64 --self-contained true
      
    - name: Archive Release (linux-x64)
      uses: thedoctor0/zip-release@master
      with:
        filename: '../releases/moodle-cli-linux-x64.zip'
        path: '../publish/linux-x64'
        exclusions: '*.git*'       

    - name: Archive Release (win-x64)
      uses: thedoctor0/zip-release@master
      with:
        filename: '../releases/moodle-cli-win-x64.zip'
        path: '../publish/win-x64'
        exclusions: '*.git*'       

    - name: Check for zip-files
      run: |
        ls -al ../releases/
        ls -al ../publish/
        ls -al ../publish/win-x64/
        ls -al ../publish/linux-x64/

    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.sem_version.outputs.major }}.${{ steps.sem_version.outputs.minor }}.${{ steps.sem_version.outputs.patch }}
        release_name: moodle-cli
        draft: true
        prerelease: false

    - name: Upload win-x64 version 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../releases/moodle-cli-win-x64.zip
        asset_name: moodle-cli-win-x64-v${{ steps.sem_version.outputs.major }}.${{ steps.sem_version.outputs.minor }}.${{ steps.sem_version.outputs.patch }}.zip
        asset_content_type: application/zip

    - name: Upload linux-x64 version 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../releases/moodle-cli-linux-x64.zip
        asset_name: moodle-cli-linux-x64-v${{ steps.sem_version.outputs.major }}.${{ steps.sem_version.outputs.minor }}.${{ steps.sem_version.outputs.patch }}.zip
        asset_content_type: application/zip


    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}      
